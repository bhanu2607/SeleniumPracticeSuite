{
  "playerName": "PATNAM BHANU KRISHNA",
  "score": 210,
  "timeTaken": "20 : 24",
  "recordedAnswers": [
    {
      "question": "What is Selenium?",
      "selectedAnswer": "Selenium is a web browser automation tool.",
      "correctAnswer": "Selenium is a web browser automation tool.",
      "isCorrect": true
    },
    {
      "question": "In Selenium, what is the purpose of the WebDriver?",
      "selectedAnswer": "To launch and interact with web browsers",
      "correctAnswer": "To launch and interact with web browsers",
      "isCorrect": true
    },
    {
      "question": "What is the correct syntax for launching Chrome browser?",
      "selectedAnswer": "IWebDriver driver = new ChromeDriver();",
      "correctAnswer": "IWebDriver driver = new ChromeDriver();",
      "isCorrect": true
    },
    {
      "question": "What is the purpose of the ExpectedConditions class?",
      "selectedAnswer": "To wait for specific expected conditions",
      "correctAnswer": "To wait for specific expected conditions",
      "isCorrect": true
    },
    {
      "question": "How can you maximize a browser window?",
      "selectedAnswer": "driver.Manage().Window.Maximize();",
      "correctAnswer": "driver.Manage().Window.Maximize();",
      "isCorrect": true
    },
    {
      "question": "What is the main difference between explicit and implicit waits?",
      "selectedAnswer": "Implicit wait is dynamic and is applied to specific elements, while explicit wait is static and is applied globally to the entire script.",
      "correctAnswer": "Explicit wait is dynamic and is applied to specific elements, while implicit wait is static and is applied globally to the entire script.",
      "isCorrect": false
    },
    {
      "question": "What is the correct way to define an explicit wait?",
      "selectedAnswer": "WebDriverWait wait = new WebDriverWait(driver, TimeSpan.FromSeconds(10));",
      "correctAnswer": "WebDriverWait wait = new WebDriverWait(driver, TimeSpan.FromSeconds(10));",
      "isCorrect": true
    },
    {
      "question": "What is the purpose of `By` class in Selenium?",
      "selectedAnswer": "To locate web elements",
      "correctAnswer": "To locate web elements",
      "isCorrect": true
    },
    {
      "question": "How do you click a button with the ID \"submitBtn\" in Selenium using C#?",
      "selectedAnswer": "driver.FindElement(By.Id(\"submitBtn\")).Click();",
      "correctAnswer": "driver.FindElement(By.Id(\"submitBtn\")).Click();",
      "isCorrect": true
    },
    {
      "question": "How do you handle dropdowns?",
      "selectedAnswer": "By sending keys",
      "correctAnswer": "Using SelectElement class",
      "isCorrect": false
    },
    {
      "question": "What is the main difference between `driver.Close()` and `driver.Quit()`?",
      "selectedAnswer": "`driver.Close()` closes the current browser window, while `driver.Quit()` closes all browser windows and ends the WebDriver session.",
      "correctAnswer": "`driver.Close()` closes the current browser window, while `driver.Quit()` closes all browser windows and ends the WebDriver session.",
      "isCorrect": true
    },
    {
      "question": "What is the main difference between `ExpectedConditions.ElementIsVisible` and `ExpectedConditions.ElementToBeClickable` methods?",
      "selectedAnswer": "`ExpectedConditions.ElementIsVisible` checks if the element is present in the DOM and visible, while `ExpectedConditions.ElementToBeClickable` additionally checks if the element is enabled.",
      "correctAnswer": "`ExpectedConditions.ElementIsVisible` checks if the element is present in the DOM and visible, while `ExpectedConditions.ElementToBeClickable` additionally checks if the element is enabled.",
      "isCorrect": true
    },
    {
      "question": "How do you navigate to a URL in Selenium using C#?",
      "selectedAnswer": "driver.Navigate().GoToURL(\"https://www.google.com\");",
      "correctAnswer": "driver.Navigate().GoToUrl(\"https://www.google.com\");",
      "isCorrect": false
    },
    {
      "question": "Which HTML input tag is used to upload files?",
      "selectedAnswer": "<input type='file'>",
      "correctAnswer": "<input type='file'>",
      "isCorrect": true
    },
    {
      "question": "<div class=\"form-group\"> \n       <label> Phone Number </label> \n     <input>\n    <label> Email Id </label> \n <input>\n <div> \n Consider the HTML structure above. What is the correct dynamic XPath to select the input for 'Email Id' element?",
      "selectedAnswer": "//div[@class='form-group']/label/input",
      "correctAnswer": "//label[normalize-space()='Email Id']/following-sibling::input",
      "isCorrect": false
    },
    {
      "question": "What is the primary purpose of the Page Object Model (POM)?",
      "selectedAnswer": "To improve code reusability by representing web pages as classes",
      "correctAnswer": "To improve code reusability by representing web pages as classes",
      "isCorrect": true
    },
    {
      "question": "What is the correct way to define a Page Object?",
      "selectedAnswer": "A class that contains locators for a web page",
      "correctAnswer": "A class that contains locators and methods for a web page",
      "isCorrect": false
    },
    {
      "question": "What is the difference between driver.FindElement() and driver.FindElements() method?",
      "selectedAnswer": "driver.FindElement() returns a single element, while driver.FindElements() returns a list of elements.",
      "correctAnswer": "driver.FindElement() returns a single element, while driver.FindElements() returns a list of elements.",
      "isCorrect": true
    },
    {
      "question": "Which framework are we currently using for our Selenium with C# tutorials(SeleniumPracticeSuite)?",
      "selectedAnswer": "NUnit",
      "correctAnswer": "NUnit",
      "isCorrect": true
    },
    {
      "question": "Which annotation is used in NUnit for declaring a test method?",
      "selectedAnswer": "[Test]",
      "correctAnswer": "[Test]",
      "isCorrect": true
    },
    {
      "question": "Which annotation is used in NUnit for declaring a test class?",
      "selectedAnswer": "[TestFixture]",
      "correctAnswer": "[TestFixture]",
      "isCorrect": true
    },
    {
      "question": "How can you get the current URL of the web page?",
      "selectedAnswer": "driver.GetURL()",
      "correctAnswer": "driver.Url",
      "isCorrect": false
    },
    {
      "question": "What is the purpose of the IWebElement interface?",
      "selectedAnswer": "To represent a web element",
      "correctAnswer": "To represent a web element",
      "isCorrect": true
    },
    {
      "question": "How can you retrieve the text of a web element?",
      "selectedAnswer": "element.GetText()",
      "correctAnswer": "element.Text",
      "isCorrect": false
    },
    {
      "question": "How can you refresh the web page?",
      "selectedAnswer": "driver.Navigate().Refresh()",
      "correctAnswer": "driver.Navigate().Refresh()",
      "isCorrect": true
    },
    {
      "question": "What is the purpose of the `driver.Manage().Timeouts().ImplicitWait` method?",
      "selectedAnswer": "To set the implicit wait time",
      "correctAnswer": "To set the implicit wait time",
      "isCorrect": true
    },
    {
      "question": "How can you switch to an iframe?",
      "selectedAnswer": "All of the above",
      "correctAnswer": "All of the above",
      "isCorrect": true
    },
    {
      "question": "How can you switch back to the default content from within an iframe in Selenium?",
      "selectedAnswer": "All of the above",
      "correctAnswer": "driver.SwitchTo().DefaultContent();",
      "isCorrect": false
    },
    {
      "question": "<div id=\"container\">\n    <ul>\n        <li class=\"list-item\">Item 1</li>\n        <li class=\"list-item\">Item 2</li>\n        <li class=\"list-item\">Item 3</li>\n    </ul>\n</div>\nConsider the HTML structure above. What is the correct dynamic XPath to select the 'Item 2' element?",
      "selectedAnswer": "All of the above",
      "correctAnswer": "All of the above",
      "isCorrect": true
    },
    {
      "question": "How can you click `TAB` key on the keyboard for an element with id `inputUsername`?",
      "selectedAnswer": "driver.FindElement(By.Id(\"inputUsername\")).SendKeys(Keys.TAB);",
      "correctAnswer": "driver.FindElement(By.Id(\"inputUsername\")).SendKeys(Keys.Tab);",
      "isCorrect": false
    }
  ]
}